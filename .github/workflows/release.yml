name: Release

on:
  workflow_dispatch:
  push:
    tags:
      - "[0-9]+.[0-9]+.[0-9]+"

jobs:
  build-rust-general:
    strategy:
      fail-fast: false
      matrix:
        include:
          - build: linux-x64
            os: ubuntu-latest
            target-triple: x86_64-unknown-linux-gnu
            lib-extension: so

          - build: linux-x86
            os: ubuntu-latest
            target-triple: i686-unknown-linux-gnu
            lib-extension: so

          - build: windows-x64
            os: windows-2019
            target-triple: x86_64-pc-windows-msvc
            lib-extension: dll

          - build: windows-x86
            os: windows-2019
            target-triple: i686-pc-windows-msvc
            lib-extension: dll

    runs-on: ${{ matrix.os }}
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Install ${{ matrix.target-triple }} toolchains
        run: |
          rustup target add ${{ matrix.target-triple }}

      - name: Build project
        run: |
          cd rust
          cargo build --target=${{ matrix.target-triple }} --release --lib

      - name: Upload built library
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.build }}
          path: rust/target/${{ matrix.target-triple }}/release/*.${{ matrix.lib-extension }}


  build-rust-android:
    name: Build Binaries
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false
      matrix:
        include:
          - build: linux-aarch64
            target-triple: aarch64-linux-android
            target-simple: arm64-v8a

          - build: linux-arm
            target-triple: armv7-linux-androideabi
            target-simple: armeabi-v7a

    steps:
      - name: Clone repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Install cmake
        uses: android-actions/setup-android@v3
        with:
          packages: 'cmake;3.10.2.4988404'

      - name: Install ${{ matrix.target-triple }} toolchains
        run: |
          rustup target add ${{ matrix.target-triple }}

      - name: Install cargo-ndk
        run: |
          cargo install cargo-ndk
      
      - name: Build project
        run: |
          export CMAKE_TOOLCHAIN_FILE="$ANDROID_NDK/build/cmake/android.toolchain.cmake"
          export ANDROID_ABI="${{ matrix.target-simple }}"
          export CARGO_NDK_ANDROID_TARGET="$ANDROID_ABI"
          
          cd rust
          cargo ndk -t ${{ matrix.target-simple }} build --release

      - name: Upload built library
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.build }}
          path: rust/target/${{ matrix.target-triple }}/release/*.so

  build:
    name: Build & Publish Jar
    runs-on: ubuntu-latest
    needs: [build-rust-android, build-rust-general]

    steps:
      - name: Clone repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: src/main/resources/natives

      - name: Get the release version from the tag
        shell: bash
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: temurin
          cache: 'maven'

      - name: Build with MVN
        run: |
          mvn -B install
          mkdir -p release
          cp $(find ./target -maxdepth 1 -type f -name "*.jar") ./release/
          
      - name: Publish to Maven
        continue-on-error: true
        env:
          MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}
        run: |
          mvn -B deploy

      - name: Upload built JAR
        uses: actions/upload-artifact@v4
        with:
          name: rnnoise4j
          path: |
            release/*.jar

      - name: Create release
        continue-on-error: true
        uses: softprops/action-gh-release@v2
        with:
          files: |
            release/*.jar
